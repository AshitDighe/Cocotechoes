from random import choice, randint
from datetime import datetime, timedelta

product_types = ["Phones", "Laptops", "Cosmetics", "Home Decor", "TVs", "Appliances", "Books", "Clothing", "Sports Equipment", "Furniture"]

products = [
    {"productName": "Product1", "productType": choice(product_types), "price": randint(50, 500)},
    {"productName": "Product2", "productType": choice(product_types), "price": randint(50, 500)},
    {"productName": "Product3", "productType": choice(product_types), "price": randint(50, 500)},
]

users = ["User1", "User2", "User3", "User4", "User5"]
searches = []

for user in users:
    for _ in range(20):
        search_date = datetime.now() - timedelta(days=randint(0, 30))
        search_entry = {
            "name": user,
            "searchText": f"SearchTerm{_ + 1}",
            "productType": choice(product_types),
            "searchDate": search_date.strftime("%Y-%m-%d %H:%M:%S")
        }
        searches.append(search_entry)

def display_products(user_name):
    user_searches = [search for search in searches if search["name"] == user_name]

    recent_product_types = set(search["productType"] for search in sorted(user_searches, key=lambda x: x["searchDate"], reverse=True)[:2])

    most_searched_product_type = max(set(search["productType"] for search in user_searches), key=lambda x: user_searches.count({"productType": x}))

    recent_products = [product for product in products if product["productType"] in recent_product_types]

    most_searched_products = [product for product in products if product["productType"] == most_searched_product_type]

    print(f"Products based on recent 2 product types for {user_name}:")
    print(recent_products)
    print("\nProducts based on most searched product type for", user_name)
    print(most_searched_products)

display_products("User1")
